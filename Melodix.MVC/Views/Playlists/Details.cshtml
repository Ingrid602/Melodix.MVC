@model Melodix.Modelos.Playlist       


@{
    ViewData["Title"] = "Details";

    var cancionSeleccionada = Model.PlaylistCanciones?.FirstOrDefault()?.Cancion;
    var totalMin = 0;
    var totalSeg = 0;

    if (Model.PlaylistCanciones != null)
    {
        foreach (var item in Model.PlaylistCanciones)
        {
            var partes = item.Cancion?.Duracion?.Split(':');
            if (partes?.Length == 2)
            {
                totalMin += int.Parse(partes[0]);
                totalSeg += int.Parse(partes[1]);
            }
        }
        totalMin += totalSeg / 60;
        totalSeg %= 60;
    }
}


<div style="background: linear-gradient(to bottom, #3e3e3e, #121212); padding: 40px; border-radius: 10px; color: white; display: flex; align-items: center;">


    <!--Imagen de la playlist -->

    <div style="width: 200px; height: 200px; background-color: #1f1f1f; display: flex; align-items: center; justify-content: center; border-radius: 8px; margin-right: 30px; overflow: hidden;">
        <img src="@Model.ImagenUrl" alt="Imagen de la playlist" style="width: 100%; height: 100%; object-fit: cover;" />
    </div>


    <!-- Información de la playlist -->
    <div>
        <p style="text-transform: uppercase; font-size: 14px; margin-bottom: 10px; color: lightgray;">Playlist @(Model.EsPrivada ? "privada" : "pública")</p>
        <h1 style="font-size: 64px; font-weight: bold; margin-bottom: 20px;">@Model.Nombre</h1>

        <div style="display: flex; align-items: center;">
            <img src="https://cdn-icons-png.flaticon.com/512/149/149071.png" alt="Usuario" style="width: 30px; height: 30px; border-radius: 50%; margin-right: 10px;" />
            <span>@User.Identity.Name</span>
        </div>
    </div>

    

    <!-- Botón para abrir el modal de edición -->
    <div class="mt-4">
        <button class="btn btn-outline-light" data-bs-toggle="modal" data-bs-target="#modalEditarPlaylist">
            Editar playlist
        </button>
    </div>
   

    <!-- Modal para editar playlist -->
    <div class="modal fade" id="modalEditarPlaylist" tabindex="-1" aria-labelledby="modalEditarPlaylistLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content bg-dark text-white">
                <div class="modal-header border-0">
                    <h5 class="modal-title" id="modalEditarPlaylistLabel">Editar Playlist</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p style="color:yellow">ID ACTUAL: @Model.PlaylistId</p>

                    @await Html.PartialAsync("Edit", Model)


                </div>
            </div>
        </div>
    </div>

</div>

@if (TempData["Mensaje"] != null)
{
    <div class="alert alert-warning text-center mt-3 w-75">
        @TempData["Mensaje"]
    </div>
}


<!-- Canciones + Reproductor lateral -->
<div class="d-flex bg-dark text-white mt-4" style="min-height: 60vh;">

    <div class="p-4 w-75">
        <h3 class="mb-3">Canciones en esta playlist</h3>

        @if (Model.PlaylistCanciones != null && Model.PlaylistCanciones.Any())
        {
            <table class="table table-dark table-striped">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Título</th>
                        <th>Duración</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var index = 1;
                        foreach (var item in Model.PlaylistCanciones)
                        {
                            var c = item.Cancion;
                            <tr class="cancion-row" style="cursor:pointer"
                                data-nombre="@c?.Nombre"
                                data-artista="@c?.Artista?.NombreArtistico"
                                data-genero="@c?.Genero"
                                data-duracion="@c?.Duracion"
                                data-imagen="@c?.Urlimagen"
                                data-archivo="@c?.ArchivoURL">

                                <td>@index</td>
                                <td>@c?.Nombre</td>
                                <td>@c?.Duracion</td>

                                <td>
                                    @if (Model.Usuario?.UserName == User.Identity?.Name)
                                    {
                                        <form asp-controller="PlaylistCanciones" asp-action="Remove"
                                              method="post" style="display:inline;">
                                            <input type="hidden" name="PlaylistId" value="@item.PlaylistId" />
                                            <input type="hidden" name="CancionId" value="@item.CancionId" />
                                            <button type="submit" class="btn btn-outline-light btn-sm rounded-circle"
                                                    title="Eliminar de la playlist" style="width:32px; height:32px; padding:0;">
                                                &minus;
                                            </button>
                                        </form>
                                    }
                                </td>

                            </tr>
                            index++;
                        }
                    }
                </tbody>


            </table>
        }
        else
        {
            <p class="text-muted">Esta playlist no contiene canciones aún.</p>
        }
    </div>

    <!-- Panel lateral -->
    <div class="bg-black p-4 shadow-lg" style="border-left: 1px solid #333; width: 380px;">
        @if (cancionSeleccionada != null)
        {
            <img id="song-img" src="@cancionSeleccionada.Urlimagen" class="img-fluid rounded mb-3" style="object-fit: cover;" />

            <h5 id="song-name" class="fw-bold">@cancionSeleccionada.Nombre</h5>
            <p><strong>Artista:</strong> <span id="song-artist">@cancionSeleccionada.Artista?.NombreArtistico</span></p>
            <p><strong>Género:</strong> <span id="song-genre">@cancionSeleccionada.Genero</span></p>
            <p><strong>Duración:</strong> <span id="song-duration">@cancionSeleccionada.Duracion</span></p>

            <div class="reproductor-personalizado">
                <button id="prev-btn" class="repro-boton" title="Anterior">⏮</button>

                <audio id="song-player" controls class="w-100 audio-estilizado" style="height: 46px;">
                    <source id="song-src" src="@cancionSeleccionada.ArchivoURL" type="audio/mpeg" />
                    Tu navegador no soporta audio.
                </audio>

                <button id="next-btn" class="repro-boton" title="Siguiente">⏭</button>
            </div>
        }
        else
        {
            <p class="text-muted">No hay canción para reproducir.</p>
        }
    </div>
</div>

<style>
    .reproductor-personalizado {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 8px;
        margin-top: 20px;
    }

    .repro-boton {
        background-color: transparent;
        border: none;
        color: #fff;
        font-size: 22px;
        padding: 6px 12px;
        border-radius: 50%;
        transition: background-color 0.2s;
    }

        .repro-boton:hover {
            background-color: #1db954;
            color: #000;
        }

    .audio-estilizado {
        flex-grow: 1;
        background-color: transparent;
        border: none;
        height: 64px;
        filter: invert(1) brightness(0.8);
    }

        .audio-estilizado::-webkit-media-controls-panel {
            background-color: transparent;
            color: white;
        }
</style>

@section Scripts {
    <script>
        const rows = Array.from(document.querySelectorAll('.cancion-row'));
        const audio = document.getElementById('song-player');
        const source = document.getElementById('song-src');
        const img = document.getElementById('song-img'); // <- referencia a la imagen
        let currentIndex = 0;

        function reproducir(index) {
            if (index < 0 || index >= rows.length) return;

            const row = rows[index];
            document.getElementById('song-name').innerText = row.dataset.nombre;
            document.getElementById('song-artist').innerText = row.dataset.artista;
            document.getElementById('song-genre').innerText = row.dataset.genero;
            document.getElementById('song-duration').innerText = row.dataset.duracion;
            source.src = row.dataset.archivo;
            img.src = row.dataset.imagen; // <- ACTUALIZA LA PORTADA
            audio.load();
            audio.play();
            currentIndex = index;
        }

        rows.forEach((row, index) => {
            row.addEventListener('click', () => reproducir(index));
            if (row.dataset.archivo === source.getAttribute('src')) currentIndex = index;
        });

        document.getElementById('prev-btn').addEventListener('click', () => {
            reproducir(currentIndex - 1);
        });

        document.getElementById('next-btn').addEventListener('click', () => {
            reproducir(currentIndex + 1);
        });
    </script>
}

}