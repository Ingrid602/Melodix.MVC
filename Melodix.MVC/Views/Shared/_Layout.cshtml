@using Microsoft.AspNetCore.Identity
@using Melodix.Modelos
<!DOCTYPE html>
<html lang="en">
@inject UserManager<Melodix.Modelos.ApplicationUser> UserManager
@inject SignInManager<Melodix.Modelos.ApplicationUser> SignInManager
@inject Melodix.Data.Data.ApplicationDbContext _context

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Melodix.MVC</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/Melodix.MVC.styles.css" asp-append-version="true" />
    <style>
        body {
            background: linear-gradient(135deg, #121212, #1e1e1e);
            color: white;
            font-family: 'Segoe UI', sans-serif;
        }

        a {
            color: #1db954;
            text-decoration: none;
        }

            a:hover {
                text-decoration: underline;
            }
    </style>

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Melodix.MVC</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">

                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Canciones" asp-action="Index">Canciones</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Albums" asp-action="Index">Albumes</a>
                        </li>
                    </ul>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var user = await UserManager.GetUserAsync(User);
                        var foto = "/img/usuarios/default-user.png"; // valor por defecto

                        if (user != null)
                        {
                            var perfil = Melodix.APIConsumer.Crud<Melodix.Modelos.PerfilUsuario>.GetById(user.Id);
                            if (perfil != null && !string.IsNullOrEmpty(perfil.FotoUrl))
                            {
                                foto = perfil.FotoUrl;
                            }
                        }


                        <ul class="navbar-nav">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="perfilDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <img src="@foto" class="rounded-circle" style="width: 32px; height: 32px; object-fit: cover;" alt="Perfil" />
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="perfilDropdown">
                                    <li><a class="dropdown-item" asp-controller="PerfilUsuarios" asp-action="Details" asp-route-id="@user.Id">Ver perfil</a></li>
                                    <li>
                                        <form asp-area="Identity"
                                              asp-page="/Account/Logout"
                                              asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })"
                                              method="post"
                                              class="dropdown-item p-0 m-0 border-0 bg-transparent">
                                            <button type="submit" class="btn w-100 text-start">Cerrar sesión</button>
                                        </form>
                                    </li>

                                </ul>
                            </li>
                        </ul>
                    }
                    else
                    {
                        <ul class="navbar-nav">
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Iniciar sesión</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registrarse</a>
                            </li>
                        </ul>
                    }

                    <form asp-action="Index" method="get" class="mb-4">
                        <div class="d-flex flex-column gap-2">

                            <!-- Fila de input y botones -->
                            <div class="d-flex flex-wrap align-items-center gap-2">
                                <input type="text" name="searchString" value="@ViewBag.CurrentFilter" placeholder="Buscar álbum, artista, perfil..." class="form-control w-auto" />
                                <button type="submit" class="btn btn-success">Buscar</button>
                                <a asp-action="Index" class="btn btn-outline-secondary">Mostrar todos</a>
                            </div>

                            <!-- Solo muestra si hay texto -->
                            @if (!string.IsNullOrWhiteSpace(ViewBag.CurrentFilter as string))
                            {
                                <div class="d-flex flex-wrap gap-2 mt-2">
                                    <a class="btn btn-outline-light" asp-controller="Canciones" asp-action="Index" asp-route-searchString="@ViewBag.CurrentFilter">Canciones</a>
                                    <a class="btn btn-outline-light" asp-controller="Albums" asp-action="Index" asp-route-searchString="@ViewBag.CurrentFilter">Álbumes</a>
                                    <a class="btn btn-outline-light" asp-controller="Artistas" asp-action="Index" asp-route-searchString="@ViewBag.CurrentFilter">Artistas</a>
                                    <a class="btn btn-outline-light" asp-controller="PerfilUsuarios" asp-action="Index" asp-route-searchString="@ViewBag.CurrentFilter">Perfiles</a>
                                </div>
                            }
                        </div>
                    </form>


                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            <!-- Barra lateral de playlists -->
            <div class="bg-black text-white p-3" style="width: 230px; position: fixed; top: 0; bottom: 0; left: 0; overflow-y: auto;">
                <h6 class="text-uppercase">Tus Playlists</h6>
                <!--Albums-->
                @{
                    var usuario = await UserManager.GetUserAsync(User);
                    var albumesGuardados = new List<Album>();

                    if (usuario != null)
                    {
                        // Verifica si ya existe la playlist "Tus me gusta" para este usuario
                        var tusMeGusta = _context.Playlists
                        .FirstOrDefault(p => p.Nombre == "Tus me gusta" && p.UsuarioId == usuario.Id);

                        // Si no existe, se crea automáticamente
                        if (tusMeGusta == null)
                        {
                            var nueva = new Melodix.Modelos.Playlist
                    {
                        Nombre = "Tus me gusta",
                        UsuarioId = usuario.Id,
                        EsPrivada = true,
                        ImagenUrl = "/img/playlists/TusMeGusta.jpg"
                    };
                            _context.Playlists.Add(nueva);
                            _context.SaveChanges(); // No puede ser await porque es una vista razor
                        }

                        albumesGuardados = _context.Albums
                        .Where(a => a.UsuariosQueLoGuardaron.Any(u => u.Id == usuario.Id))
                        .ToList();
                    }
                }

                @if (ViewBag.Playlists != null)
                {
                    foreach (var playlist in ViewBag.Playlists as List<Melodix.Modelos.Playlist>)
                    {
                         <a href="@Url.Action("Details", "Playlists", new { id = playlist.PlaylistId })" class="d-flex align-items-center gap-2 mb-3 text-white text-decoration-none">
                            <img src="@playlist.ImagenUrl" style="width: 40px; height: 40px; object-fit: cover;" class="rounded" />
                            <span>@playlist.Nombre</span>
                        </a>
                    }
                }

                <h6 class="text-uppercase mt-4">Tus Álbumes</h6>
                @if (albumesGuardados != null && albumesGuardados.Any())
                {
                    foreach (var album in albumesGuardados)
                    {
                        <a href="@Url.Action("Details", "Albums", new { id = album.AlbumId })" class="d-flex align-items-center gap-2 mb-3 text-white text-decoration-none">
                            <img src="@album.urlImagen" style="width: 40px; height: 40px; object-fit: cover;" class="rounded" />
                            <span>@album.Nombre</span>
                        </a>
                    }
                }
                else
                {
                    <p class="text-muted small">No has guardado álbumes aún.</p>
                }

                <button class="btn btn-success mt-3 w-100" data-bs-toggle="modal" data-bs-target="#modalCrearPlaylist">
                    + Crear Playlist
                </button>
            </div>

            <div style="margin-left: 230px;">
                @RenderBody()
            </div>
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - Melodix.MVC - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
